' Script de surveillance (Monitor.vbs)
Dim objShell, sapClosed, inactivityCounter, timeout, checkInterval, sapLogonPath, retryAttempts, i

sapClosed = False
inactivityCounter = 0
timeout = 300000 ' Temps d'inactivité en millisecondes (5 minutes dans cet exemple)
checkInterval = 1000 ' Intervalle de vérification en millisecondes (1 seconde dans cet exemple)
sapLogonPath = "C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe" ' Chemin d'accès à SAP Logon (adaptez-le à votre installation)
retryAttempts = 2 ' Nombre de tentatives (2 tentatives dans cet exemple, dont la première)

Set objShell = CreateObject("WScript.Shell")

For i = 1 To retryAttempts
    ' Ouvrir SAP si nécessaire
    If sapClosed Then
        objShell.Run """" & sapLogonPath & """", 1, False
        WScript.Sleep 5000 ' Attendre que SAP s'ouvre (ajustez le temps d'attente si nécessaire)
        sapClosed = False
    End If

    ' Exécuter le script principal
    On Error Resume Next
    Set objExec = objShell.Exec("wscript MainScript.vbs")
    On Error GoTo 0

    ' Surveiller le script principal pour détecter les erreurs et vérifier l'inactivité
    If Err.Number <> 0 Then
        ' Si une erreur se produit, fermer SAP et tenter à nouveau, si possible
        objShell.Run "taskkill /F /IM saplogon.exe", 0, True
        Set objKillMainScript = objShell.Exec("taskkill /F /PID " & objExec.ProcessID) ' Fermer le script MainScript.vbs avec objShell.Exec
        sapClosed = True
        If i < retryAttempts Then
            MsgBox "Une erreur s'est produite dans le script. Tentative " & i & " sur " & retryAttempts & ". Essayons à nouveau."
        Else
            MsgBox "Le script a échoué après " & retryAttempts & " tentatives. Veuillez vérifier le script et réessayer."
            Exit For
        End If
    Else
        Exit For
    End If
Next
