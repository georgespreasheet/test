On Error Resume Next

' Exécutez la transaction LS24
sapSession.findById("wnd[0]").maximize
sapSession.findById("wnd[0]/tbar[0]/okcd").Text = "/nLS24"
sapSession.findById("wnd[0]").sendVKey 0

' Vérifiez si une erreur s'est produite lors de l'exécution de la transaction
If Err.Number <> 0 Then
    WScript.Echo "Erreur lors de l'exécution de la transaction LS24: " & Err.Description
    sapSession.findById("wnd[0]/tbar[0]/btn[12]").press
    WScript.Quit(Err.Number)
End If
On Error GoTo 0

Option Explicit

' ... (déclarations de variables et connexion à SAP) ...

' Exécutez la transaction LS24
sapSession.StartTransaction "LS24"

' Entrez les valeurs et exécutez la transaction
sapSession.findById("wnd[0]/usr/ctxtS_MATNR-LOW").Text = "MATNR_VALUE"
sapSession.findById("wnd[0]/usr/ctxtS_LGNUM-LOW").Text = "LGNUM_VALUE"
sapSession.findById("wnd[0]/usr/ctxtS_WERKS-LOW").Text = "WERKS_VALUE"
sapSession.findById("wnd[0]/tbar[1]/btn[8]").press

' Vérifiez les erreurs après l'exécution de la transaction
CheckError "Exécution de la transaction LS24"

' ... (traitement des résultats et autres actions) ...

' Fonction de vérification des erreurs
Sub CheckError(actionDescription)
    If Err.Number <> 0 Then
        WScript.Echo "Erreur lors de l'exécution de l'action suivante : " & actionDescription & ": " & Err.Description
        sapSession.findById("wnd[0]/tbar[0]/btn[12]").press
        WScript.Quit(Err.Number)
    End If
End Sub


Option Explicit
Dim objShell, exitCode, lastModified, currentTime, inactivityCounter, checkInterval, timeout
Dim logFile, logFileObj, fso, ne2Script

checkInterval = 1000 ' Vérifier l'inactivité toutes les 1000 ms (1 seconde)
timeout = 60000 ' Timeout après 60000 ms (60 secondes) d'inactivité

' Chemin vers le fichier journal de ne2.vbs
logFile = "C:\path\to\ne2_log.txt"
' Chemin vers le script ne2.vbs
ne2Script = "C:\path\to\ne2.vbs"

Set objShell = CreateObject("WScript.Shell")
Set fso = CreateObject("Scripting.FileSystemObject")

' Exécuter ne2.vbs et attendre qu'il se termine
exitCode = objShell.Run("wscript """ & ne2Script & """", , True)

If exitCode <> 0 Then
    ' Le script s'est terminé avec une erreur
    WScript.Echo "ne2.vbs a rencontré une erreur. Code de sortie : " & exitCode
Else
    ' Le script s'est terminé avec succès
    WScript.Echo "ne2.vbs s'est terminé avec succès."
End If

' Surveiller l'inactivité de ne2.vbs en vérifiant le fichier journal
Do
    If fso.FileExists(logFile) Then
        Set logFileObj = fso.GetFile(logFile)
        currentTime = Now
        lastModified = logFileObj.DateLastModified

        If DateDiff("s", lastModified, currentTime) * 1000 > timeout Then
            ' Le fichier journal n'a pas été mis à jour depuis le délai d'inactivité
            WScript.Echo "Inactivité détectée dans ne2.vbs. Arrêt du script."
            objShell.Run "taskkill /F /IM wscript.exe /FI ""WindowTitle eq ne2.vbs""", , True
            Exit Do
        End If
    End If
    WScript.Sleep checkInterval
Loop


Option Explicit
Dim logFile, fso

logFile = "C:\path\to\ne2_log.txt"
Set fso = CreateObject("Scripting.FileSystemObject")

' Fonction pour écrire dans le fichier journal
Sub WriteToLog(message)
    Dim logStream
    Set logStream = fso.OpenTextFile(logFile, 8, True)
    logStream.WriteLine Now & " - " & message
    logStream.Close
End Sub

' Exemple de code à exécuter dans ne2.vbs
Dim i
For i = 1 To 10
    WriteToLog "Traitement en cours : " & i

